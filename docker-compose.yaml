version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

  db_postgres:
    image: postgres
    container_name: db_postgres
    environment:
      - POSTGRES_USER=$YOUR_USERNAME
      - POSTGRES_PASSWORD=$YOUR_PASSWORD
      - POSTGRES_DB=$YOUR_DB_NAME
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - JAVA_OPTS="-Xms128M -Xmx128M"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - JAVA_OPTS="-Xms256M -Xmx256M"
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch
    environment:
      - JAVA_OPTS="-Xms256M -Xmx256M"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - JAVA_OPTS="-Xms256M -Xmx256M"

  authorization-server:
    image: 'agusramdan/authorization-server:latest'
    build:
      context: .
    container_name: authorization-server
    depends_on:
      - db_postgres
    ports:
      - "9000:9000"
    environment:
      - JAVA_OPTS="-Xms128M -Xmx128M"


  api-cdt-core-service:
    image: 'agusramdan/api-cdt-core-service:dev'
    container_name: api-cdt-core-service
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - SPRING_PROFILES_ACTIVE=zipkin
      - JAVA_OPTS="-Xms128M -Xmx128M"
      - POSTGRES_USER=$YOUR_USERNAME
      - POSTGRES_PASSWORD=$YOUR_PASSWORD
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_postgres:5432/$YOUR_DB_NAME
      - SPRING_DATASOURCE_USERNAME=$YOUR_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$YOUR_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8082:8080"
    depends_on:
      - db_postgres
      - zipkin
      - logstash
      - kafka

  api-cdt-cdm-service:
    image: 'agusramdan/api-cdt-cdm-service:dev'
    build:
      context: .
    container_name: api-cdt-cdm-service
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "app=api-cdt-cdm-service"
      - "tier=backend"
      - "env=dev"
      - "maintainer=agus"
      - "traefik.enable=true"
      - "traefik.http.routers.cdm.rule=Host(`cdm.local`)"
      - "traefik.http.services.cdm.loadbalancer.server.port=8080"
    depends_on:
      - api-cdt-core-service
      - zipkin
      - logstash
      - kafka
      - mongodb
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://merahputih-id.tech:9000
      - SPRING_PROFILES_ACTIVE=oauth2,zipkin
      - JAVA_OPTS="-Xms128M -Xmx128M"
    ports:
      - "8091:8080"

  api-cdt-event-service:
    image: 'agusramdan/api-cdt-event-service:dev'
    build:
      context: .
    container_name: api-cdt-event-service
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "app=api-cdt-event-service"
      - "tier=backend"
      - "env=dev"
      - "maintainer=agus"
      - "traefik.enable=true"
      - "traefik.http.routers.event.rule=Host(`event.local`)"
      - "traefik.http.services.event.loadbalancer.server.port=8080"
    depends_on:
      - kafka
      - mongodb
      - zipkin
      - logstash
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://merahputih-id.tech:9000
      - SPRING_PROFILES_ACTIVE=oauth2,zipkin
      - JAVA_OPTS="-Xms128M -Xmx128M"
    ports:
      - "8099:8080"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --schedule "0 * * * *" --label-enable

volumes:
  pgdata:
